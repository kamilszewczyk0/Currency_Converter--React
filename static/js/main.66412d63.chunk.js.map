{"version":3,"sources":["Form/converter__background.jpg","GlobalStyle.js","Form/Result/styled.js","Form/Result/index.js","currencies.js","Form/styled.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Form/index.js","Footer/styled.js","Footer/index.js","Container/styled.js","Container/index.js","App.js","serviceWorker.js","index.js","theme.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","StyledResult","styled","p","currencies","id","shorthand","fullName","value","StyledForm","form","Fieldset","fieldset","background","theme","breakpoints","mobile","Legend","legend","colors","golddust","Button","button","clicked","Title","span","Wrapper","section","Label","label","Display","Clock","date","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","weekday","month","day","year","hour","minute","second","dateFormat","Form","result","calculateFinalAmount","currency","setCurrency","amount","setAmount","onSubmit","event","preventDefault","onChange","target","name","className","type","min","step","placeholder","required","map","key","StyledFooter","footer","Link","a","Footer","href","Main","main","Container","children","App","setResult","rate","find","targetAmount","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,mD,6fCEpC,IAAMC,EAAcC,YAAH,K,qGCAjB,IAAMC,EAAeC,IAAOC,EAAV,KCgBVF,IClBFG,EAAa,CACxB,CACEC,GAAI,EACJC,UAAW,MACXC,SAAU,OACVC,MAAO,UAET,CACEH,GAAI,EACJC,UAAW,MACXC,SAAU,sBACVC,MAAO,UAET,CACEH,GAAI,EACJC,UAAW,MACXC,SAAU,kBACVC,MAAO,UAET,CACEH,GAAI,EACJC,UAAW,MACXC,SAAU,gBACVC,MAAO,UAET,CACEH,GAAI,EACJC,UAAW,MACXC,SAAU,iBACVC,MAAO,W,q+CC1BJ,IAAMC,EAAaP,IAAOQ,KAAV,KAIVC,EAAWT,IAAOU,SAAV,IAGVC,KAKY,qBAAEC,MAAiBC,YAAYC,UAMzCC,EAASf,IAAOgB,OAAV,KAIH,qBAAEJ,MAAiBK,OAAOC,YAI7BC,EAASnB,IAAOoB,OAAV,KAER,qBAAER,MAAiBK,OAAOC,YACrB,qBAAEN,MAAiBK,OAAOC,YASpC,qBAAEN,MAAiBK,OAAOI,WAIT,qBAAET,MAAiBC,YAAYC,UAKzCQ,EAAQtB,IAAOuB,KAAV,KAIK,qBAAEX,MAAiBC,YAAYC,UAMzCU,EAAUxB,IAAOyB,QAAV,KAIPC,EAAQ1B,IAAO2B,MAAV,KACK,qBAAEf,MAAiBC,YAAYC,U,6FC/D/C,IAAMc,EAAU5B,IAAOC,EAAV,KCmBL4B,EAND,WACZ,IAAMC,ECdsB,WAAO,IAAD,EACVC,mBAAS,IAAIC,MADH,mBAC3BF,EAD2B,KACrBG,EADqB,KAYlC,OATAC,qBAAU,WACR,IAAMC,EAAaC,aAAY,WAC7BH,EAAQ,IAAID,QACX,KACH,OAAO,WACLK,cAAcF,MAEf,IAEIL,EDEMQ,GAEb,OAAO,kBAACV,EAAD,iBAdU,SAACE,GAAD,OACjBA,EAAKS,eAAe,QAAS,CAC3BC,QAAS,OACTC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YAMgBC,CAAWjB,KEmDxBkB,EAvDF,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,qBAA0B,EACfnB,mBAAS7B,EAAW,GAAGE,WADR,mBACxC+C,EADwC,KAC9BC,EAD8B,OAGnBrB,mBAAS,IAHU,mBAGxCsB,EAHwC,KAGhCC,EAHgC,KAU/C,OACE,kBAAC/C,EAAD,CAAYgD,SANG,SAACC,GAChBA,EAAMC,iBACNP,EAAqBC,EAAUE,KAK7B,kBAAC5C,EAAD,KACE,kBAACM,EAAD,8BACA,kBAAC,EAAD,MACA,kBAACS,EAAD,KACE,kBAACE,EAAD,KACE,kBAACJ,EAAD,iBACW,uCADX,6BAGA,2BACEhB,MAAO+C,EACPK,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAcL,EAAUK,EAAOrD,QACzCsD,KAAK,SACLC,UAAU,yBACVC,KAAK,SACLC,IAAI,IACJC,KAAK,OACLC,YAAY,mBACZC,UAAQ,MAId,kBAAC1C,EAAD,CAASqC,UAAU,WACjB,kBAACnC,EAAD,CAAOmC,UAAU,uBACf,kBAACvC,EAAD,sCACA,4BACEhB,MAAO6C,EACPS,KAAK,eACLF,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAcP,EAAYO,EAAOrD,SAC1CJ,EAAWiE,KAAI,SAAChB,GAAD,OACd,4BAAQiB,IAAKjB,EAAS/C,UAAWE,MAAO6C,EAAS/C,WAAjD,UACM+C,EAAS/C,UADf,aAC6B+C,EAAS9C,SADtC,YAOR,kBAACc,EAAD,qBACA,kBAAC,EAAD,CAAQ8B,OAAQA,O,qTC7DjB,IAAMoB,EAAerE,IAAOsE,OAAV,KAMZC,EAAOvE,IAAOwE,EAAV,KAKJ,qBAAE5D,MAAiBK,OAAOI,WCKxBoD,EAfA,WACb,OACE,kBAACJ,EAAD,KACE,sEAEE,kBAACE,EAAD,CAAMG,KAAK,iCAAiCf,OAAO,UAAnD,yBAFF,4BAOA,yD,kQCXC,IAAMgB,EAAO3E,IAAO4E,KAAV,KCKFC,EAJG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OAAO,kBAACH,EAAD,KAAOG,ICsBDC,MApBf,WAAgB,IAAD,EACehD,qBADf,mBACNkB,EADM,KACE+B,EADF,KAYb,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAM/B,OAAQA,EAAQC,qBAXG,SAACC,EAAUE,GACtC,IAAM4B,EAAO/E,EAAWgF,MAAK,qBAAE9E,YAA6B+C,KAAU7C,MAEtE0E,EAAU,CACRG,aAAc9B,EAAS4B,EACvB9B,gBAOA,kBAAC,EAAD,QCTciC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAe/E,MCVE,CACnBK,OAAQ,CACNC,SAAU,UACVG,QAAS,uBAGXR,YAAa,CACXC,OAAQ,ODIN,kBAACjB,EAAD,MACA,kBAAC,EAAD,QAGJ+F,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.66412d63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/converter__background.b117055c.jpg\";","import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n   html {\r\n   box-sizing: border-box;\r\n   background: #222222;\r\n   color: #fec300;\r\n   font-family: \"Lato\", sans-serif;\r\n   }\r\n\r\n   *,\r\n   ::before,\r\n   ::after {\r\n   box-sizing: inherit;\r\n   }\r\n\r\n   #root {\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n   background: #000000;\r\n   }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledResult = styled.p`\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport {StyledResult} from \"./styled\";\r\n\r\nconst Result = ({result}) => {\r\n  return (\r\n    <>\r\n      {result !== undefined && (\r\n        <StyledResult>\r\n          You will receive\r\n          <strong>\r\n            &nbsp;{result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n          </strong>\r\n        </StyledResult>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StyledResult;\r\n","export const currencies = [\r\n  {\r\n    id: 1,\r\n    shorthand: \"EUR\",\r\n    fullName: \"Euro\",\r\n    value: \"4.4508\",\r\n  },\r\n  {\r\n    id: 2,\r\n    shorthand: \"USD\",\r\n    fullName: \"United States Dolar\",\r\n    value: \"3.7533\",\r\n  },\r\n  {\r\n    id: 3,\r\n    shorthand: \"NOK\",\r\n    fullName: \"Norwegian Krone\",\r\n    value: \"0.4223\",\r\n  },\r\n  {\r\n    id: 4,\r\n    shorthand: \"RUB\",\r\n    fullName: \"Russian Ruble\",\r\n    value: \"0.0500\",\r\n  },\r\n  {\r\n    id: 5,\r\n    shorthand: \"GBP\",\r\n    fullName: \"Pound Sterling\",\r\n    value: \"4.9953\",\r\n  },\r\n];\r\n","import styled from \"styled-components\";\r\nimport background from \"./converter__background.jpg\";\r\n\r\nexport const StyledForm = styled.form`\r\n  padding-top: 40px;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n  padding: 30px 30px 10px 30px;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgb(0, 0, 0)),\r\n    url(\"${background}\");\r\n  background-position: center;\r\n  background-size: cover;\r\n  z-index: 0;\r\n\r\n  @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n  font-family: \"Anton\", sans-serif;\r\n  letter-spacing: 1px;\r\n  padding: 10px;\r\n  border: 2px ${({theme}) => theme.colors.golddust} solid;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: #222222;\r\n  color: ${({theme}) => theme.colors.golddust};\r\n  border: 2px ${({theme}) => theme.colors.golddust} solid;\r\n  padding: 8px 16px;\r\n  margin-bottom: 20px;\r\n\r\n  &:active {\r\n    background: #333333;\r\n  }\r\n\r\n  &:focus {\r\n    ${({theme}) => theme.colors.clicked};\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n    margin: 0 auto 20px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.span`\r\n  width: 300px;\r\n  display: inline-block;\r\n\r\n  @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n    margin-bottom: 15px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.section`\r\n  margin: 30px 0;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  @media (max-width: ${({theme}) => theme.breakpoints.mobile}px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Display = styled.p`\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\r\nimport {Display} from \"./styled\";\r\nimport {useCurrentDate} from \"./useCurrentDate\";\r\n\r\nconst dateFormat = (date) =>\r\n  date.toLocaleString(\"en-GB\", {\r\n    weekday: \"long\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    year: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n  });\r\n\r\nconst Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return <Display>Today is {dateFormat(date)}</Display>;\r\n};\r\n\r\nexport default Clock;\r\n","import {useState, useEffect} from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return date;\r\n};\r\n","import React, {useState} from \"react\";\r\nimport Result from \"./Result\";\r\nimport {currencies} from \"../currencies\";\r\nimport {\r\n  StyledForm,\r\n  Fieldset,\r\n  Legend,\r\n  Button,\r\n  Title,\r\n  Label,\r\n  Wrapper,\r\n} from \"./styled\";\r\nimport Clock from \"../Clock\";\r\n\r\nconst Form = ({result, calculateFinalAmount}) => {\r\n  const [currency, setCurrency] = useState(currencies[0].shorthand);\r\n\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateFinalAmount(currency, amount);\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onSubmit}>\r\n      <Fieldset>\r\n        <Legend>Currency converter v2</Legend>\r\n        <Clock />\r\n        <Wrapper>\r\n          <Label>\r\n            <Title>\r\n              How much <strong>PLN</strong> do You want to exchange?\r\n            </Title>\r\n            <input\r\n              value={amount}\r\n              onChange={({target}) => setAmount(target.value)}\r\n              name=\"amount\"\r\n              className=\"converter__amountValue\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              step=\"0.01\"\r\n              placeholder=\"Enter the amount\"\r\n              required\r\n            />\r\n          </Label>\r\n        </Wrapper>\r\n        <Wrapper className=\"section\">\r\n          <Label className=\"converter__currency\">\r\n            <Title>Choose the currency You want:</Title>\r\n            <select\r\n              value={currency}\r\n              name=\"currencyList\"\r\n              onChange={({target}) => setCurrency(target.value)}>\r\n              {currencies.map((currency) => (\r\n                <option key={currency.shorthand} value={currency.shorthand}>\r\n                  {`${currency.shorthand} (${currency.fullName})`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </Label>\r\n        </Wrapper>\r\n        <Button>Let's see...</Button>\r\n        <Result result={result} />\r\n      </Fieldset>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n  text-align: center;\r\n  font-family: \"Lato\", sans-serif;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  color: inherit;\r\n  text-decoration: none;\r\n\r\n  &:visited {\r\n    color: ${({theme}) => theme.colors.clicked};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {StyledFooter, Link} from \"./styled\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <StyledFooter>\r\n      <p>\r\n        Currency exchange courses based on&thinsp;\r\n        <Link href=\"https://kursy-walut.mybank.pl/\" target=\"_blanc\">\r\n          kursy-walut.mybank.pl\r\n        </Link>\r\n        &thinsp;from day 4.09.2020\r\n      </p>\r\n      <p>© Kamil Szewczyk 2020</p>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n  max-width: 900px;\r\n  min-height: 100vh;\r\n  margin: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n`;\r\n","import React from \"react\";\r\nimport {Main} from \"./styled\";\r\n\r\nconst Container = ({children}) => {\r\n  return <Main>{children}</Main>;\r\n};\r\n\r\nexport default Container;\r\n","import React, {useState} from \"react\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport Container from \"./Container\";\nimport {currencies} from \"./currencies\";\n\nfunction App() {\n  const [result, setResult] = useState();\n\n  const calculateFinalAmount = (currency, amount) => {\n    const rate = currencies.find(({shorthand}) => shorthand === currency).value;\n\n    setResult({\n      targetAmount: amount / rate,\n      currency,\n    });\n  };\n\n  return (\n    <Container>\n      <Form result={result} calculateFinalAmount={calculateFinalAmount} />\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {GlobalStyle} from \"./GlobalStyle\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {theme} from \"./theme\";\nimport {ThemeProvider} from \"styled-components\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const theme = {\r\n  colors: {\r\n    golddust: \"#fec300\",\r\n    clicked: \" hsl(59, 100%, 70%)\",\r\n  },\r\n\r\n  breakpoints: {\r\n    mobile: 767,\r\n  },\r\n};\r\n"],"sourceRoot":""}